// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserModal test should render UserModal 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HashRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <UserModal>
        <div
          className="modal"
        >
          <div
            className="content"
          >
            <button
              className="button"
              type="button"
            >
              <ForwardRef(CloseOutlined)
                onClick={[Function]}
                style={
                  Object {
                    "color": "#ffffff",
                    "fontSize": "25px",
                  }
                }
              >
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "close",
                      "theme": "outlined",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "color": "#ffffff",
                      "fontSize": "25px",
                    }
                  }
                >
                  <span
                    aria-label="close"
                    className="anticon anticon-close"
                    onClick={[Function]}
                    role="img"
                    style={
                      Object {
                        "color": "#ffffff",
                        "fontSize": "25px",
                      }
                    }
                    tabIndex={-1}
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "close",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="close"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-close"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                          key="svg-close-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(CloseOutlined)>
            </button>
            <UserModalForm>
              <ForwardRef(InternalForm)
                className="form"
                form={
                  Object {
                    "__INTERNAL__": Object {
                      "itemRef": [Function],
                      "name": undefined,
                    },
                    "getFieldError": [Function],
                    "getFieldInstance": [Function],
                    "getFieldValue": [Function],
                    "getFieldWarning": [Function],
                    "getFieldsError": [Function],
                    "getFieldsValue": [Function],
                    "getInternalHooks": [Function],
                    "isFieldTouched": [Function],
                    "isFieldValidating": [Function],
                    "isFieldsTouched": [Function],
                    "isFieldsValidating": [Function],
                    "resetFields": [Function],
                    "scrollToField": [Function],
                    "setFields": [Function],
                    "setFieldsValue": [Function],
                    "submit": [Function],
                    "validateFields": [Function],
                  }
                }
                labelAlign="left"
                labelCol={
                  Object {
                    "span": 10,
                  }
                }
                onFinish={[Function]}
                size="small"
                wrapperCol={
                  Object {
                    "span": 16,
                  }
                }
              >
                <SizeContextProvider
                  size="small"
                >
                  <ForwardRef(Form)
                    className="ant-form ant-form-horizontal ant-form-small form"
                    form={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": undefined,
                        },
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                      }
                    }
                    onFinish={[Function]}
                    onFinishFailed={[Function]}
                  >
                    <form
                      className="ant-form ant-form-horizontal ant-form-small form"
                      onReset={[Function]}
                      onSubmit={[Function]}
                    >
                      <img
                        alt="Аватар"
                        className="img"
                        src="https://i.ibb.co/2yWbJxP/default.png"
                      />
                      <div
                        className="imgEdit"
                      >
                        <label
                          className="fileLabel"
                          htmlFor="file-input"
                        >
                          <span
                            className="fileSpan"
                          >
                            Update photo
                          </span>
                        </label>
                        <input
                          className="fileInput"
                          id="file-input"
                          name="file"
                          onChange={[Function]}
                          type="file"
                        />
                        <button
                          className="fileDelete"
                          onClick={[Function]}
                          type="button"
                        >
                          <span
                            className="fileSpan"
                          >
                            Delete photo
                          </span>
                        </button>
                      </div>
                      <FormItem
                        className="item"
                        label={
                          <label
                            className="label"
                          >
                            First and last name:
                          </label>
                        }
                        name="name"
                        rules={
                          Array [
                            Object {
                              "validator": [Function],
                            },
                          ]
                        }
                      >
                        <WrapperField
                          className="item"
                          label={
                            <label
                              className="label"
                            >
                              First and last name:
                            </label>
                          }
                          messageVariables={
                            Object {
                              "label": "name",
                            }
                          }
                          name="name"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "validator": [Function],
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            className="item"
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_name"
                            label={
                              <label
                                className="label"
                              >
                                First and last name:
                              </label>
                            }
                            messageVariables={
                              Object {
                                "label": "name",
                              }
                            }
                            name={
                              Array [
                                "name",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "validator": [Function],
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  className="item"
                                  htmlFor="name"
                                  label={
                                    <label
                                      className="label"
                                    >
                                      First and last name:
                                    </label>
                                  }
                                  name="name"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "validator": [Function],
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label ant-form-item-label-left"
                                    span={10}
                                  >
                                    <div
                                      className="ant-col ant-col-10 ant-form-item-label ant-form-item-label-left"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="name"
                                        title=""
                                      >
                                        <label
                                          className="label"
                                        >
                                          First and last name:
                                        </label>
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  className="item"
                                  errors={Array []}
                                  label={
                                    <label
                                      className="label"
                                    >
                                      First and last name:
                                    </label>
                                  }
                                  name={
                                    Array [
                                      "name",
                                    ]
                                  }
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "validator": [Function],
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validateStatus=""
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={16}
                                  >
                                    <div
                                      className="ant-col ant-col-16 ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Input
                                                className="input"
                                                onChange={[Function]}
                                                placeholder="John Doe"
                                                type="text"
                                                value="John Doe"
                                              />
                                            }
                                          >
                                            <Input
                                              className="input"
                                              id="name"
                                              onChange={[Function]}
                                              placeholder="John Doe"
                                              type="text"
                                            >
                                              <ClearableLabeledInput
                                                bordered={true}
                                                className="input"
                                                element={
                                                  <input
                                                    className="ant-input ant-input-sm input"
                                                    id="name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="John Doe"
                                                    type="text"
                                                  />
                                                }
                                                focused={false}
                                                handleReset={[Function]}
                                                id="name"
                                                inputType="input"
                                                onChange={[Function]}
                                                placeholder="John Doe"
                                                prefixCls="ant-input"
                                                size="small"
                                                triggerFocus={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="ant-input ant-input-sm input"
                                                  id="name"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="John Doe"
                                                  type="text"
                                                  value=""
                                                />
                                              </ClearableLabeledInput>
                                            </Input>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                      <FormItem
                        className="item"
                        label={
                          <label
                            className="label"
                          >
                            Gender:
                          </label>
                        }
                        name="gender"
                        rules={
                          Array [
                            Object {
                              "validator": [Function],
                            },
                          ]
                        }
                      >
                        <WrapperField
                          className="item"
                          label={
                            <label
                              className="label"
                            >
                              Gender:
                            </label>
                          }
                          messageVariables={
                            Object {
                              "label": "gender",
                            }
                          }
                          name="gender"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "validator": [Function],
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            className="item"
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_gender"
                            label={
                              <label
                                className="label"
                              >
                                Gender:
                              </label>
                            }
                            messageVariables={
                              Object {
                                "label": "gender",
                              }
                            }
                            name={
                              Array [
                                "gender",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "validator": [Function],
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  className="item"
                                  htmlFor="gender"
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Gender:
                                    </label>
                                  }
                                  name="gender"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "validator": [Function],
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label ant-form-item-label-left"
                                    span={10}
                                  >
                                    <div
                                      className="ant-col ant-col-10 ant-form-item-label ant-form-item-label-left"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="gender"
                                        title=""
                                      >
                                        <label
                                          className="label"
                                        >
                                          Gender:
                                        </label>
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  className="item"
                                  errors={Array []}
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Gender:
                                    </label>
                                  }
                                  name={
                                    Array [
                                      "gender",
                                    ]
                                  }
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "validator": [Function],
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validateStatus=""
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={16}
                                  >
                                    <div
                                      className="ant-col ant-col-16 ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Input
                                                className="input"
                                                onChange={[Function]}
                                                placeholder="Мужской"
                                                type="text"
                                                value="male"
                                              />
                                            }
                                          >
                                            <Input
                                              className="input"
                                              id="gender"
                                              onChange={[Function]}
                                              placeholder="Мужской"
                                              type="text"
                                            >
                                              <ClearableLabeledInput
                                                bordered={true}
                                                className="input"
                                                element={
                                                  <input
                                                    className="ant-input ant-input-sm input"
                                                    id="gender"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="Мужской"
                                                    type="text"
                                                  />
                                                }
                                                focused={false}
                                                handleReset={[Function]}
                                                id="gender"
                                                inputType="input"
                                                onChange={[Function]}
                                                placeholder="Мужской"
                                                prefixCls="ant-input"
                                                size="small"
                                                triggerFocus={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="ant-input ant-input-sm input"
                                                  id="gender"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Мужской"
                                                  type="text"
                                                  value=""
                                                />
                                              </ClearableLabeledInput>
                                            </Input>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                      <FormItem
                        className="item"
                        label={
                          <label
                            className="label"
                          >
                            Date of birth:
                          </label>
                        }
                        name="birthDate"
                        rules={
                          Array [
                            Object {
                              "message": "Формат: ММ.ДД.ГГГГ",
                              "pattern": /\\^\\(0\\[1-9\\]\\|1\\[012\\]\\)\\[\\.\\]\\(0\\[1-9\\]\\|\\[12\\]\\[0-9\\]\\|3\\[01\\]\\)\\[\\.\\]\\(19\\|20\\)\\\\d\\\\d\\$/,
                            },
                            Object {
                              "validator": [Function],
                            },
                          ]
                        }
                      >
                        <WrapperField
                          className="item"
                          label={
                            <label
                              className="label"
                            >
                              Date of birth:
                            </label>
                          }
                          messageVariables={
                            Object {
                              "label": "birthDate",
                            }
                          }
                          name="birthDate"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Формат: ММ.ДД.ГГГГ",
                                "pattern": /\\^\\(0\\[1-9\\]\\|1\\[012\\]\\)\\[\\.\\]\\(0\\[1-9\\]\\|\\[12\\]\\[0-9\\]\\|3\\[01\\]\\)\\[\\.\\]\\(19\\|20\\)\\\\d\\\\d\\$/,
                              },
                              Object {
                                "validator": [Function],
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            className="item"
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_birthDate"
                            label={
                              <label
                                className="label"
                              >
                                Date of birth:
                              </label>
                            }
                            messageVariables={
                              Object {
                                "label": "birthDate",
                              }
                            }
                            name={
                              Array [
                                "birthDate",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "message": "Формат: ММ.ДД.ГГГГ",
                                  "pattern": /\\^\\(0\\[1-9\\]\\|1\\[012\\]\\)\\[\\.\\]\\(0\\[1-9\\]\\|\\[12\\]\\[0-9\\]\\|3\\[01\\]\\)\\[\\.\\]\\(19\\|20\\)\\\\d\\\\d\\$/,
                                },
                                Object {
                                  "validator": [Function],
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  className="item"
                                  htmlFor="birthDate"
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Date of birth:
                                    </label>
                                  }
                                  name="birthDate"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Формат: ММ.ДД.ГГГГ",
                                        "pattern": /\\^\\(0\\[1-9\\]\\|1\\[012\\]\\)\\[\\.\\]\\(0\\[1-9\\]\\|\\[12\\]\\[0-9\\]\\|3\\[01\\]\\)\\[\\.\\]\\(19\\|20\\)\\\\d\\\\d\\$/,
                                      },
                                      Object {
                                        "validator": [Function],
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label ant-form-item-label-left"
                                    span={10}
                                  >
                                    <div
                                      className="ant-col ant-col-10 ant-form-item-label ant-form-item-label-left"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="birthDate"
                                        title=""
                                      >
                                        <label
                                          className="label"
                                        >
                                          Date of birth:
                                        </label>
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  className="item"
                                  errors={Array []}
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Date of birth:
                                    </label>
                                  }
                                  name={
                                    Array [
                                      "birthDate",
                                    ]
                                  }
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Формат: ММ.ДД.ГГГГ",
                                        "pattern": /\\^\\(0\\[1-9\\]\\|1\\[012\\]\\)\\[\\.\\]\\(0\\[1-9\\]\\|\\[12\\]\\[0-9\\]\\|3\\[01\\]\\)\\[\\.\\]\\(19\\|20\\)\\\\d\\\\d\\$/,
                                      },
                                      Object {
                                        "validator": [Function],
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validateStatus=""
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={16}
                                  >
                                    <div
                                      className="ant-col ant-col-16 ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Input
                                                className="input"
                                                onChange={[Function]}
                                                type="text"
                                                value={
                                                  Object {
                                                    "ruDateAndTime": "05 October 2011 14:48 UTC",
                                                  }
                                                }
                                              />
                                            }
                                          >
                                            <Input
                                              className="input"
                                              id="birthDate"
                                              onChange={[Function]}
                                              type="text"
                                            >
                                              <ClearableLabeledInput
                                                bordered={true}
                                                className="input"
                                                element={
                                                  <input
                                                    className="ant-input ant-input-sm input"
                                                    id="birthDate"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="text"
                                                  />
                                                }
                                                focused={false}
                                                handleReset={[Function]}
                                                id="birthDate"
                                                inputType="input"
                                                onChange={[Function]}
                                                prefixCls="ant-input"
                                                size="small"
                                                triggerFocus={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="ant-input ant-input-sm input"
                                                  id="birthDate"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="text"
                                                  value=""
                                                />
                                              </ClearableLabeledInput>
                                            </Input>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                      <FormItem
                        className="item"
                        label={
                          <label
                            className="label"
                          >
                            Registration date:
                          </label>
                        }
                        name="registrationDate"
                      >
                        <WrapperField
                          className="item"
                          label={
                            <label
                              className="label"
                            >
                              Registration date:
                            </label>
                          }
                          messageVariables={
                            Object {
                              "label": "registrationDate",
                            }
                          }
                          name="registrationDate"
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            className="item"
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_registrationDate"
                            label={
                              <label
                                className="label"
                              >
                                Registration date:
                              </label>
                            }
                            messageVariables={
                              Object {
                                "label": "registrationDate",
                              }
                            }
                            name={
                              Array [
                                "registrationDate",
                              ]
                            }
                            onMetaChange={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  className="item"
                                  htmlFor="registrationDate"
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Registration date:
                                    </label>
                                  }
                                  name="registrationDate"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                >
                                  <Col
                                    className="ant-form-item-label ant-form-item-label-left"
                                    span={10}
                                  >
                                    <div
                                      className="ant-col ant-col-10 ant-form-item-label ant-form-item-label-left"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="registrationDate"
                                        title=""
                                      >
                                        <label
                                          className="label"
                                        >
                                          Registration date:
                                        </label>
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  className="item"
                                  errors={Array []}
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Registration date:
                                    </label>
                                  }
                                  name={
                                    Array [
                                      "registrationDate",
                                    ]
                                  }
                                  prefixCls="ant-form"
                                  status=""
                                  touched={false}
                                  validateStatus=""
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={16}
                                  >
                                    <div
                                      className="ant-col ant-col-16 ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Input
                                                className="input"
                                                disabled={true}
                                                type="text"
                                              />
                                            }
                                          >
                                            <Input
                                              className="input"
                                              disabled={true}
                                              id="registrationDate"
                                              onChange={[Function]}
                                              type="text"
                                            >
                                              <ClearableLabeledInput
                                                bordered={true}
                                                className="input"
                                                disabled={true}
                                                element={
                                                  <input
                                                    className="ant-input ant-input-sm ant-input-disabled input"
                                                    disabled={true}
                                                    id="registrationDate"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="text"
                                                  />
                                                }
                                                focused={false}
                                                handleReset={[Function]}
                                                id="registrationDate"
                                                inputType="input"
                                                onChange={[Function]}
                                                prefixCls="ant-input"
                                                size="small"
                                                triggerFocus={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="ant-input ant-input-sm ant-input-disabled input"
                                                  disabled={true}
                                                  id="registrationDate"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="text"
                                                  value=""
                                                />
                                              </ClearableLabeledInput>
                                            </Input>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                      <FormItem
                        className="item item_email"
                        label={
                          <label
                            className="label"
                          >
                            Email:
                          </label>
                        }
                        name="email"
                      >
                        <WrapperField
                          className="item item_email"
                          label={
                            <label
                              className="label"
                            >
                              Email:
                            </label>
                          }
                          messageVariables={
                            Object {
                              "label": "email",
                            }
                          }
                          name="email"
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            className="item item_email"
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_email"
                            label={
                              <label
                                className="label"
                              >
                                Email:
                              </label>
                            }
                            messageVariables={
                              Object {
                                "label": "email",
                              }
                            }
                            name={
                              Array [
                                "email",
                              ]
                            }
                            onMetaChange={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item item item_email"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item item item_email"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  className="item item_email"
                                  htmlFor="email"
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Email:
                                    </label>
                                  }
                                  name="email"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                >
                                  <Col
                                    className="ant-form-item-label ant-form-item-label-left"
                                    span={10}
                                  >
                                    <div
                                      className="ant-col ant-col-10 ant-form-item-label ant-form-item-label-left"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="email"
                                        title=""
                                      >
                                        <label
                                          className="label"
                                        >
                                          Email:
                                        </label>
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  className="item item_email"
                                  errors={Array []}
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Email:
                                    </label>
                                  }
                                  name={
                                    Array [
                                      "email",
                                    ]
                                  }
                                  prefixCls="ant-form"
                                  status=""
                                  touched={false}
                                  validateStatus=""
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={16}
                                  >
                                    <div
                                      className="ant-col ant-col-16 ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Input
                                                className="input"
                                                disabled={true}
                                                placeholder=""
                                                type="text"
                                                value="test"
                                              />
                                            }
                                          >
                                            <Input
                                              className="input"
                                              disabled={true}
                                              id="email"
                                              onChange={[Function]}
                                              placeholder=""
                                              type="text"
                                            >
                                              <ClearableLabeledInput
                                                bordered={true}
                                                className="input"
                                                disabled={true}
                                                element={
                                                  <input
                                                    className="ant-input ant-input-sm ant-input-disabled input"
                                                    disabled={true}
                                                    id="email"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder=""
                                                    type="text"
                                                  />
                                                }
                                                focused={false}
                                                handleReset={[Function]}
                                                id="email"
                                                inputType="input"
                                                onChange={[Function]}
                                                placeholder=""
                                                prefixCls="ant-input"
                                                size="small"
                                                triggerFocus={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="ant-input ant-input-sm ant-input-disabled input"
                                                  disabled={true}
                                                  id="email"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder=""
                                                  type="text"
                                                  value=""
                                                />
                                              </ClearableLabeledInput>
                                            </Input>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                      <FormItem
                        className="item"
                        label={
                          <label
                            className="label"
                          >
                            Phone:
                          </label>
                        }
                        name="tel"
                        rules={
                          Array [
                            Object {
                              "message": "Минимум 5",
                              "min": 5,
                            },
                            Object {
                              "max": 20,
                              "message": "Максимум 20",
                            },
                          ]
                        }
                      >
                        <WrapperField
                          className="item"
                          label={
                            <label
                              className="label"
                            >
                              Phone:
                            </label>
                          }
                          messageVariables={
                            Object {
                              "label": "tel",
                            }
                          }
                          name="tel"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Минимум 5",
                                "min": 5,
                              },
                              Object {
                                "max": 20,
                                "message": "Максимум 20",
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            className="item"
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_tel"
                            label={
                              <label
                                className="label"
                              >
                                Phone:
                              </label>
                            }
                            messageVariables={
                              Object {
                                "label": "tel",
                              }
                            }
                            name={
                              Array [
                                "tel",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "message": "Минимум 5",
                                  "min": 5,
                                },
                                Object {
                                  "max": 20,
                                  "message": "Максимум 20",
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  className="item"
                                  htmlFor="tel"
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Phone:
                                    </label>
                                  }
                                  name="tel"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Минимум 5",
                                        "min": 5,
                                      },
                                      Object {
                                        "max": 20,
                                        "message": "Максимум 20",
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label ant-form-item-label-left"
                                    span={10}
                                  >
                                    <div
                                      className="ant-col ant-col-10 ant-form-item-label ant-form-item-label-left"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="tel"
                                        title=""
                                      >
                                        <label
                                          className="label"
                                        >
                                          Phone:
                                        </label>
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  className="item"
                                  errors={Array []}
                                  label={
                                    <label
                                      className="label"
                                    >
                                      Phone:
                                    </label>
                                  }
                                  name={
                                    Array [
                                      "tel",
                                    ]
                                  }
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Минимум 5",
                                        "min": 5,
                                      },
                                      Object {
                                        "max": 20,
                                        "message": "Максимум 20",
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validateStatus=""
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={16}
                                  >
                                    <div
                                      className="ant-col ant-col-16 ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Input
                                                className="input"
                                                onChange={[Function]}
                                                placeholder="55555"
                                                type="text"
                                                value="55555"
                                              />
                                            }
                                          >
                                            <Input
                                              className="input"
                                              id="tel"
                                              onChange={[Function]}
                                              placeholder="55555"
                                              type="text"
                                            >
                                              <ClearableLabeledInput
                                                bordered={true}
                                                className="input"
                                                element={
                                                  <input
                                                    className="ant-input ant-input-sm input"
                                                    id="tel"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="55555"
                                                    type="text"
                                                  />
                                                }
                                                focused={false}
                                                handleReset={[Function]}
                                                id="tel"
                                                inputType="input"
                                                onChange={[Function]}
                                                placeholder="55555"
                                                prefixCls="ant-input"
                                                size="small"
                                                triggerFocus={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="ant-input ant-input-sm input"
                                                  id="tel"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="55555"
                                                  type="text"
                                                  value=""
                                                />
                                              </ClearableLabeledInput>
                                            </Input>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                      <FormItem
                        className="submit"
                      >
                        <Row
                          className="ant-form-item submit"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item submit"
                            style={Object {}}
                          >
                            <FormItemLabel
                              className="submit"
                              prefixCls="ant-form"
                              requiredMark={true}
                            />
                            <FormItemInput
                              className="submit"
                              errors={Array []}
                              name={Array []}
                              prefixCls="ant-form"
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                              warnings={Array []}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={16}
                              >
                                <div
                                  className="ant-col ant-col-16 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Button
                                        className="button"
                                        htmlType="submit"
                                        style={Object {}}
                                        type="primary"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-primary ant-btn-sm button"
                                            onClick={[Function]}
                                            style={Object {}}
                                            type="submit"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Save
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                  </div>
                                  <ErrorList
                                    className="ant-form-item-explain-connected"
                                    errors={Array []}
                                    helpStatus=""
                                    warnings={Array []}
                                  >
                                    <CSSMotion
                                      motionAppear={false}
                                      motionDeadline={500}
                                      motionEnter={false}
                                      motionName="ant-show-help"
                                      onAppearActive={[Function]}
                                      onAppearEnd={[Function]}
                                      onAppearStart={[Function]}
                                      onEnterActive={[Function]}
                                      onEnterEnd={[Function]}
                                      onEnterStart={[Function]}
                                      onLeaveActive={[Function]}
                                      onLeaveEnd={[Function]}
                                      onLeaveStart={[Function]}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </FormItem>
                    </form>
                  </ForwardRef(Form)>
                </SizeContextProvider>
              </ForwardRef(InternalForm)>
            </UserModalForm>
          </div>
        </div>
      </UserModal>
    </Router>
  </HashRouter>
</Provider>
`;
